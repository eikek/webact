openapi: 3.0.0

info:
  title: Webact
  version: 0.5.0

servers:
  - url: /api/v1
    description: Current host

paths:
  /scripts:
    get:
      summary: Get all scripts.
      description: |
        Return a list of all available scripts.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScriptInfo"

  /scripts/{script}:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    delete:
      summary: Delete a script file.
      description: |
        Deletes the file on the server.
      responses:
        200:
          description: Ok
    put:
      summary: Upload a script file.
      description: |
        Add a script file. If the file already exists on the server,
        it is overwritten.

        If the directory is controlled by git, a new commit is created
        containing the change. You may use the POST variant with a
        multipart/form request to specify a commit message.
      requestBody:
        content:
          any:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptDetail"

    post:
      summary: Upload a script file.
      description: |
        Add a script file. If the file already exists on the server,
        it is overwritten.

        If the directory is controlled by git, a new commit is
        created. A commit message may be specified in the request.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - script
              properties:
                commitMsg:
                  type: string
                script:
                  type: string
                  format: binary
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptDetail"
    get:
      summary: Get a script meta data
      description: |
        Return a JSON structure containing the scripts meta data.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptInfo"

  /scripts/{script}/run:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Run a script.
      description: |
        The script is executed on the server asynchronously. The
        request body is passed as argument to the script as well as
        the information about the current request.

        If this is a multipart request, each part is passed as
        separate argument to the script.
      responses:
        '200':
          description: Ok

  /scripts/{script}/runsync:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Run a script synchronously.
      description: |
        The script is executed on the server and the stdout is sent as
        response. The request body is passed as argument to the script
        as well as the information about the current request.

        If this is a multipart request, each part is passed as
        separate argument to the script.

        Which data (stdout or stderr) is sent depends on the scripts
        meta data and its return code.

        A 404 response is returned, if the script is not found or if
        it is disabled.
      responses:
        '200':
          description: Ok
        '404':
          description: NotFound
        '400':
          description: BadRequest
        '500':
          description: Internal Server Error
    get:
      summary: Run a script synchronously.
      description: |
        The script is executed on the server and its output is sent as
        response. The request is passed as argument to the script.

        Which data (stdout or stderr) is sent depends on the scripts
        meta data and its return code.

        A 404 response is returned, if the script is not found or if
        it is disabled.
      responses:
        '200':
          description: Ok
        '404':
          description: NotFound
        '400':
          description: BadRequest
        '500':
          description: Internal Server Error

  /scripts/{script}/running:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get information about current running state.
      description: |
        Return short information about current run state of a script.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunningInfo"

  /scripts/{script}/content:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get the scripts' content.
      description: |
        Return the script file as is.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not found


  /scripts/{script}/output/stdout:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get the stdout output of the last script run
      description: |
        Return the complete stdout output of the script last run.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
  /scripts/{script}/output/stderr:
    parameters:
      - name: script
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get the stderr output of the last script run
      description: |
        Return the complete stderr output of the script last run.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string


components:
  schemas:
    ScriptInfo:
      description: |
        All information about a script and its last run.
      required:
        - script
      properties:
        script:
          $ref: "#/components/schemas/ScriptDetail"
        output:
          $ref: "#/components/schemas/ScriptOutput"

    ScriptOutput:
      description: |
        Details about a script run.
      required:
        - date
        - returnCode
        - success
        - runningTime
        - runCount
        - runSuccess
      properties:
        date:
          type: string
          format: datetime
        returnCode:
          type: integer
          format: int32
        success:
          type: boolean
        runningTime:
          type: integer
          format: int64
        runCount:
          type: integer
          format: int32
        runSuccess:
          type: integer
          format: int32

    ScriptDetail:
      description: |
        A scripts meta data.
      required:
        - name
        - category
        - lastModified
        - description
        - schedule
        - scheduledAt
        - executing
        - enabled
        - notifyMail
        - notifyErrorMail
        - params
      properties:
        name:
          type: string
        category:
          type: array
          items:
            type: string
        lastModified:
          type: integer
          format: int64
        description:
          type: string
        schedule:
          type: string
        scheduledAt:
          type: string
        executing:
          type: integer
          format: int64
        enabled:
          type: boolean
        notifyMail:
          type: string
        notifyErrorMail:
          type: string
        params:
          type: array
          items:
            $ref: "#/components/schemas/Parameter"

    RunningInfo:
      description: |
        A short info about running state of a script.
      required:
        - executing
      properties:
        executing:
          type: integer
          format: int64
    Parameter:
      description: |
        A description of a script parameter. The `format` is one of
        `Line`, `Text` or `Password` and indicates the type of input
        expected from a caller.
      required:
        - name
        - format
      properties:
        name:
          type: string
        format:
          type: string
